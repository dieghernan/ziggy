// Ziggy Gradle Build File
//
// This file contains the declarative portion of the build only.
// Imperative tasks are found in script-plugins and are applied at the
// bottom of this file.

apply plugin: 'eclipse'
apply plugin: 'java'

// See comment for ziggyDependencies in gradle.properties.
ext.ziggyDependencies = "$rootDir/$ziggyDependencies"

defaultTasks "assemble"

repositories {
    mavenCentral()
    flatDir {
        dirs "$ziggyDependencies/lib"
    }
}

dependencies {
    // Needed to compile ziggy.
    implementation 'com.github.librepdf:openpdf:1.3.+'
    implementation 'com.github.testdriven.guice:commons-configuration:1.+'
    implementation 'com.google.guava:guava:23.+'
    implementation 'com.jgoodies:jgoodies-forms:1.9.+'
    implementation 'com.jgoodies:jgoodies-looks:2.7.+'
    implementation 'commons-cli:commons-cli:1.5.+'
    implementation 'commons-codec:commons-codec:1.+'
    implementation 'commons-io:commons-io:2.11.+'
    implementation 'org.apache.commons:commons-collections4:4.+'
    implementation 'org.apache.commons:commons-compress:1.+'
    implementation 'org.apache.commons:commons-csv:1.9.+'
    implementation 'org.apache.commons:commons-exec:1.+'
    implementation 'org.apache.commons:commons-lang3:3.12.+'
    implementation 'org.apache.commons:commons-math3:3.6.+'
    implementation 'org.apache.commons:commons-text:1.+'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.+'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.+'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.+'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.+'
    implementation 'org.hibernate:hibernate-core:4.2.+'
    implementation 'org.javassist:javassist:3.29.2-GA'
    implementation 'org.jfree:jfreechart:1.0.+'
    implementation 'org.netbeans.api:org-netbeans-swing-outline:+'
    implementation 'org.tros:l2fprod-properties-editor:1.3.+'
    implementation 'com.sun.xml.bind:jaxb-impl:3.0+'
    runtimeOnly 'jakarta.xml.bind:jakarta.xml.bind-api:3.0+'

    // Libraries built in buildSrc.
    implementation ':jarhdf5:1.12.+'
    implementation ':wrapper:3.5.26'

    // Needed to compile unit tests.
    implementation 'junit:junit:4.+'
    implementation 'org.hamcrest:hamcrest:2.+'
    implementation 'org.mockito:mockito-core:3.+'

    // Needed to run unit tests.
    // hsqldb version 2.3.4 causes PipelineInstanceTaskCrudTest to
    // fail with HsqlException: data exception: datetime field
    // overflow. This can be fixed by replacing Long.MAX_VALUE with a
    // smaller date. Other problems ensue with version 2.6.
    implementation 'org.hsqldb:hsqldb:2.3.2'

    // Needed at runtime.
    implementation 'org.postgresql:postgresql:9.4-1201-jdbc4'

    // Probably not needed
    // implementation 'c3p0:c3p0:0.9.+'
    // implementation 'org.hibernate.common:hibernate-commons-annotations:4.0.2.Final'
    // implementation 'org.hibernate:antlr:2.7.+'
    // implementation 'org.lucee:dom4j:1.6.+'
    // implementation 'org.jboss.logging:jboss-logging:3.1.0.GA'
    // implementation 'org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec:1.0.1.Final'
    // implementation 'org.slf4j:jcl-over-slf4j:1.7.+'
    // implementation 'org.slf4j:slf4j-api:1.7.+'
    // implementation 'org.slf4j:slf4j-simple:1.7.+'
    // implementation 'net.sf.trove4j:trove4j:3.0.+'


    // Hibernate libraries...
    // implementation 'hibernate:hibernate-entitymanager:+'
    // implementation 'org.ehcache.modules:ehcache-core:3.0.+'
    // implementation 'org.freemarker:freemarker:2.3.+'
    // implementation 'org.hibernate:hibernate-c3p0:4.2.+'
    // implementation 'org.hibernate:hibernate-ehcache:4.2.+'
    // implementation 'org.hibernate:hibernate-tools:4.2.+'

    // Remaining libraries that may no longer be necessary.
    // implementation 'cglib:cglib-nodep:2.1_3'
    // implementation 'com.google.code.gson:gson:2.+'
    // implementation 'com.mchange:mchange-commons-java:0.2.11'
    // implementation 'com.oracle.database.jdbc.debug:ojdbc6_g:+'
    // implementation 'com.sun.mail:dsn:+'
    // implementation 'com.sun.mail:imap:+'
    // implementation 'com.sun.mail:mailapi:+'
    // implementation 'com.sun.mail:pop3:+'
    // implementation 'com.sun.mail:smtp:+'
    // implementation 'com.toedter:jcalendar:1.3.+'
    // implementation 'commons-dbcp:commons-dbcp:1.2.+'
    // implementation 'commons-pool:commons-pool:1.+'
    // implementation 'javax.jms:jms-api:+'
    // implementation 'jmock:jmock-cglib:1.1.0'
    // implementation 'org.antlr:antlr:3.4'
    // implementation 'org.antlr:stringtemplate:3.+'
    // implementation 'org.beanshell:bsh-core:2.0b4'
    // implementation 'org.hamcrest:hamcrest-core:2.2-rc1'
    // implementation 'org.hamcrest:hamcrest-library:2.2-rc1'
    // implementation 'org.jboss.jbossts:common:4.17.+'
    // implementation 'org.jboss.jbossts:jbossjta-integration:4.16.+'
    // implementation 'org.jboss.jbossts:jbossjta:4.16.+'
    // implementation 'org.jmock:jmock-junit3:2.5.1'
    // implementation 'org.jmock:jmock-junit4:2.5.1'
    // implementation 'org.jmock:jmock-legacy:2.5.1'
    // implementation 'org.jmock:jmock-script:2.5.+'
    // implementation 'org.jmock:jmock:2.5.1'
    // implementation 'org.objenesis:objenesis:1.+'
    // implementation 'spice:spice-jndikit:1.1'

    // Could not find these on search.maven.org.
    // implementation ':jMockJUnit4Support:1.1.0RC1'
    // implementation 'cglib:cglib:2.1_3-src'
    // implementation 'org.jmock:jmock:1.1.+'
    // implementation 'org.jboss.jbossts:concurrent:4.+'
}

tasks.withType(JavaCompile) {
    options.deprecation = true
}

test {
    systemProperty "log4j2.configurationFile","$projectDir/test/data/logging/log4j2.xml"
    systemProperty "java.library.path", "$ziggyDependencies/lib"
    
    forkEvery = 1

    testLogging {
        events "failed", "skipped"
    }
    
    // The RMI tests appear to have an ordering sensitivity. To wit,
    // If Intra- runs before Inter-, they all run successfully. 
    // If Inter- runs before Intra-, Intra- tests all fail. 
    // Nonetheless, these tests are good to have for interactive use,
    // as they allow to troubleshoot RMI problems more simply. Thus,
    // we leave that class out of gradle test but keep it around in case
    // we need it. 
    filter {
        excludeTestsMatching "*RmiIntra*"
    }
}

test.doLast() {
    println "\n Total tests: ${numTests}"
}

javadoc {
    title = "Ziggy API"
    options.overview = "src/main/java/overview.html"
}

// Apply Ziggy Gradle script plugins.
apply from: "script-plugins/copy.gradle"
apply from: "script-plugins/copy-hdf5.gradle"
apply from: "script-plugins/database-schemas.gradle"
apply from: "script-plugins/eclipse.gradle"
apply from: "script-plugins/gcc.gradle"
apply from: "script-plugins/misc.gradle"
apply from: "script-plugins/test.gradle"
apply from: "script-plugins/wrapper.gradle"
apply from: "script-plugins/xml-schemas.gradle"
apply from: "script-plugins/ziggy-libraries.gradle"
