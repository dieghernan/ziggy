// Ziggy Gradle Build File
//
// This file contains the declarative portion of the build only.
// Imperative tasks are found in script-plugins and are applied at the
// bottom of this file.

plugins {
    id 'com.github.spotbugs' version '5.0.+'
    id 'eclipse'
    id 'java'
}

defaultTasks "build"

ext {
    // See comment for ziggyDependencies in gradle.properties.
    ziggyDependencies = "$rootDir/$ziggyDependencies"
}

repositories {
    mavenCentral()
    flatDir {
        dirs "$ziggyDependencies/lib"
    }
}

dependencies {
    // Needed to compile ziggy.
    implementation 'com.github.librepdf:openpdf:1.3.+'
    implementation 'com.github.testdriven.guice:commons-configuration:1.+'
    implementation 'com.google.guava:guava:23.+'
    implementation 'com.jgoodies:jgoodies-forms:1.9.+'
    implementation 'com.jgoodies:jgoodies-looks:2.7.+'
    implementation 'com.sun.xml.bind:jaxb-impl:3.0+'
    implementation 'commons-cli:commons-cli:1.5.+'
    implementation 'commons-codec:commons-codec:1.+'
    implementation 'commons-io:commons-io:2.11.+'
    implementation 'org.apache.commons:commons-collections4:4.+'
    implementation 'org.apache.commons:commons-compress:1.+'
    implementation 'org.apache.commons:commons-csv:1.9.+'
    implementation 'org.apache.commons:commons-exec:1.+'
    implementation 'org.apache.commons:commons-lang3:3.12.+'
    implementation 'org.apache.commons:commons-math3:3.6.+'
    implementation 'org.apache.commons:commons-text:1.+'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.+'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.+'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.+'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.+'
    implementation 'org.hibernate:hibernate-core:4.2.+'
    implementation 'org.javassist:javassist:3.29.2-GA'
    implementation 'org.jfree:jfreechart:1.0.+'
    implementation 'org.netbeans.api:org-netbeans-swing-outline:+'
    implementation 'org.tros:l2fprod-properties-editor:1.3.+'
    implementation 'tanukisoft:wrapper:3.2.+'
    runtimeOnly 'jakarta.xml.bind:jakarta.xml.bind-api:3.0+'

    // Libraries built in buildSrc.
    implementation ':jarhdf5:1.12.+'
    implementation ':wrapper:'

    // Needed to compile unit tests.
    implementation 'junit:junit:4.13.+'
    implementation 'org.hamcrest:hamcrest:2.+'
    implementation 'org.mockito:mockito-core:3.12.+'

    // Needed to run unit tests.
    // hsqldb version 2.3.4 causes PipelineInstanceTaskCrudTest to
    // fail with HsqlException: data exception: datetime field
    // overflow. This can be fixed by replacing Long.MAX_VALUE with a
    // smaller date. Other problems ensue with version 2.6.
    implementation 'org.hsqldb:hsqldb:2.3.2'

    // Needed at runtime.
    implementation 'org.postgresql:postgresql:9.4-1201-jdbc4'
}

tasks.withType(JavaCompile) {
    options.deprecation = true
}

test {
    systemProperty "log4j2.configurationFile","$projectDir/test/data/logging/log4j2.xml"
    systemProperty "java.library.path", "$ziggyDependencies/lib"
    
    testLogging {
        events "failed", "skipped"
    }
    useJUnit {
        excludeCategories 'gov.nasa.ziggy.IntegrationTestCategory'
    }
}

// Execute tests marked with @Category(IntegrationTestCategory.class).
task integrationTest(type: Test) {
    useJUnit {
        includeCategories 'gov.nasa.ziggy.IntegrationTestCategory'
        excludeCategories 'gov.nasa.ziggy.RunByNameTestCategory'
    }
}

// Execute tests marked with @Category(RunByNameTestCategory.class).
// These tests are typically run explicitly with the --tests option
// since they don't play well with others. For example:
// gradle runByNameTests --tests *RmiInterProcessCommunicationTest
task runByNameTest(type: Test) {
    useJUnit {
        includeCategories 'gov.nasa.ziggy.RunByNameTestCategory'
    }
}

// Task specified by the Ziggy Software Management Plan (SMP) to run all tests.
task testAll

testAll.dependsOn test, integrationTest

javadoc {
    title = "Ziggy API"
    options.overview = "src/main/java/overview.html"
}

spotbugs {
    reportLevel = 'high'
}

// The following should work to provide a single closure instead of
// separate closures for the spotbugsMain and spotbugsTest tasks, but
// it generates a "Could not get unknown property 'com'" error.
// tasks.withType(com.github.spotbugs.SpotBugsTask) {
// The following more verbose code accomplishes the same thing.

tasks.matching {task -> task.name.startsWith('spotbugs')}.forEach {
    it.reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

// Apply Ziggy Gradle script plugins.
apply from: "script-plugins/copy.gradle"
apply from: "script-plugins/copy-hdf5.gradle"
apply from: "script-plugins/database-schemas.gradle"
apply from: "script-plugins/eclipse.gradle"
apply from: "script-plugins/gcc.gradle"
apply from: "script-plugins/misc.gradle"
apply from: "script-plugins/test.gradle"
apply from: "script-plugins/wrapper.gradle"
apply from: "script-plugins/xml-schemas.gradle"
apply from: "script-plugins/ziggy-libraries.gradle"
